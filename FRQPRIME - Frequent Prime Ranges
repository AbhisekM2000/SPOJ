/*
    Author : RAJON BARDHAN
    AUST CSE 27th Batch
    All my programming success are dedicated to my mom , dad , little sister madhobi , teachers , friends and love TANIA SULTANA RIMY

    Problem Name : FRQPRIME - Frequent Prime Ranges ( SPOJ )
    ALGORITHM : Two Pointer
*/

#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define ff first
#define ss second
#define mp make_pair
#define memo(a,b) memset(a,b,sizeof(a))
#define INF 1e9
#define EPS 1e-8
#define PI 3.14159265358979323846

typedef long long ll ;
typedef unsigned long long ull ;

/* int dx[] = {1,-1,0,0} , dy[] = {0,0,1,-1}; */ // 4 Direction
/* int dx[] = {1,-1,0,0,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1,1,-1}; */ // 8 Direction
/* int dx[] = {1,-1,1,-1,2,2,-2,-2} , dy[] = {2,2,-2,-2,1,-1,1,-1}; */ // Knight Direction
/* int dx[] = {2,-2,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1}; */ // Hexagonal Direction

char arr[100000+10];

void sieve()
{
    for(int i=2;i<=100000;i++)
    {
        if(arr[i]==NULL)
        {
            arr[i] = 'P' ;
            for(int j=i+i;j<=100000;j+=i) arr[j] = '1' ;
        }
    }
}

int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    sieve();
    int T ;
    scanf("%d",&T);
    while( T-- )
    {
        int N , K ;
        scanf("%d%d",&N,&K);
        int low = 2 , high = 2 , temp = 1 ;
        ll ans = 0 ;
        while( high<=N )
        {
            if( temp>=K )
            {
                ans = ans + (ll)(N-high+1) ;
                if(arr[low]=='P') temp--;
                low++;
            }
            else
            {
                high++;
                if(arr[high]=='P') temp++;
            }
            if(low>high)
            {
                high = low ;
                temp = 0 ;
                if(arr[low]=='P') temp++;
            }
        }
        printf("%lld\n",ans);
    }
    return 0;
}
