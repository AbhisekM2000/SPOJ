/*
    Author : RAJON BARDHAN
    AUST CSE 27th Batch
    All my programming success are dedicated to my mom , dad , little sister madhobi , teachers , friends and love TANIA SULTANA RIMY

    Problem Name : PT07Y - Is it a tree ( SPOJ )
    ALGORITHM : DFS
*/

#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define ff first
#define ss second
#define mp make_pair
#define memo(a,b) memset(a,b,sizeof(a))
#define INF 1e9
#define EPS 1e-8
#define PI 3.14159265358979323846

typedef long long ll ;
typedef unsigned long long ull ;

/* int dx[] = {1,-1,0,0} , dy[] = {0,0,1,-1}; */ // 4 Direction
/* int dx[] = {1,-1,0,0,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1,1,-1}; */ // 8 Direction
/* int dx[] = {1,-1,1,-1,2,2,-2,-2} , dy[] = {2,2,-2,-2,1,-1,1,-1}; */ // Knight Direction
/* int dx[] = {2,-2,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1}; */ // Hexagonal Direction

vector <int> G[10000+10];
bool visit[10000+10];
int N , M , cycle ;

void dfs(int u,int prev)
{
    if(visit[u])
    {
        cycle = 1 ;
        return ;
    }
    visit[u] = true ;
    for(int i=0;i<G[u].size();i++)
    {
        int v = G[u][i] ;
        if(v!=prev)dfs(v,u);
    }
}
int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    while( scanf("%d%d",&N,&M)==2 )
    {
        for(int i=0;i<=10000;i++) G[i].clear(),visit[i]=false ;
        cycle = 0 ;

        while( M-- )
        {
            int u , v ;
            scanf("%d%d",&u,&v);
            G[u].pb(v);
            G[v].pb(u);
        }
        dfs(1,1);
        for(int i=1;i<=N;i++) if(visit[i]==false) cycle = 1 ;
        if(cycle) puts("NO");
        else puts("YES");
    }
    return 0;
}
